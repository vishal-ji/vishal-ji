slip 6
Q1) . Write a R program to create a data frame using two given vectors and display the 
duplicate elements 
> companies <- data.frame(Shares = c("TCS", "Reliance", "HDFC Bank", "Infosys", 
 "Reliance"), 
+ Price = c(3200, 1900, 1500, 2200, 1900)) 
> companies 
 Shares Price 
1 TCS 3200 
2 Reliance 1900 
3 HDFC Bank 1500 
4 Infosys 2200 
5 Reliance 1900 
> cat("After removing Duplicates ", "\n") 
After removing Duplicates 
> companies[duplicated(companies),] 
 Shares Price 
5 Reliance 1900 




py-----


Q2).  Write a python program to implement hierarchical Agglomerative clustering algorithm. 
(Download Customer.csv dataset from github.com). 
Ansïƒ dataset = pd.read_csv('Mall_Customers.csv') 
x = dataset.iloc[:, [3, 4]].values 
import scipy.cluster.hierarchy as shc 
dendro = shc.dendrogram(shc.linkage(x, method="ward")) 
mtp.title("Dendrogrma Plot") 
mtp.ylabel("Euclidean Distances") 
mtp.xlabel("Customers") 
mtp.show() 
from sklearn.cluster import AgglomerativeClustering 
hc= AgglomerativeClustering(n_clusters=5, affinity='euclidean', linkage='ward') 
y_pred= hc.fit_predict(x) 
mtp.scatter(x[y_pred == 0, 0], x[y_pred == 0, 1], s = 100, c = 'blue', label = 'Cluster 1') 
mtp.scatter(x[y_pred == 1, 0], x[y_pred == 1, 1], s = 100, c = 'green', label = 'Cluster 2') 
mtp.scatter(x[y_pred== 2, 0], x[y_pred == 2, 1], s = 100, c = 'red', label = 'Cluster 3') 
mtp.scatter(x[y_pred == 3, 0], x[y_pred == 3, 1], s = 100, c = 'cyan', label = 'Cluster 4') 
mtp.scatter(x[y_pred == 4, 0], x[y_pred == 4, 1], s = 100, c = 'magenta', label = 'Cluster 5') 
mtp.title('Clusters of customers') 
mtp.xlabel('Annual Income (k$)') 
mtp.ylabel('Spending Score (1-100)') 
mtp.legend() 
mtp.show()

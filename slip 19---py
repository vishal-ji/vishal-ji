# Create a data frame with student details
students <- data.frame(
  Rollno = c(101, 102, 103, 104, 105),
  Studname = c("Alice", "Bob", "Charlie", "David", "Eva"),
  Address = c("123 Maple St", "456 Oak St", "789 Pine St", "101 Birch St", "202 Cedar St"),
  Marks = c(85, 90, 78, 88, 92)
)

# Display the details of the students
print("Details of Students:")
print(students)



py----


import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 1: Load the dataset
df = pd.read_csv('cars.csv')

# Display the first few rows of the dataset
print("Dataset Preview:")
print(df.head())

# Step 2: Define features and target variable
X = df[['Year', 'Mileage', 'Tax']]  # Features
y = df['Price']                      # Target variable

# Step 3: Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 4: Create and fit the Multiple Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 5: Make predictions
y_pred = model.predict(X_test)

# Step 6: Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Display results
print("\nEstimated coefficients:")
print(f"Intercept (b0): {model.intercept_:.2f}")
print(f"Coefficients (b1, b2, b3): {model.coef_}")

print("\nPerformance Metrics:")
print(f"Mean Squared Error (MSE): {mse:.2f}")
print(f"R-squared (RÂ²): {r2:.2f}")

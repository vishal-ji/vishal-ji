slip 9
Q1. Write an R program to create a Data frames which contain details of 5 employees and 
display summary of the data.
Employee contain (empno,empname,gender,age,designation)
Employees = data.frame(
 Empno=c(1,2,3,4,5),
 empname=c("Anastasia S","Dima R","Katherine S", "JAMES A","LAURA MARTIN"),
 Gender=c("M","M","F","F","M"),
 Age=c(23,22,25,26,32),
 Designation=c("Clerk","Manager","Exective","CEO","ASSISTANT")
 )
print("Summary of the data:") 
print(summary(Employees))

Q2. Write a Python program to build an SVM model to Cancer dataset. The dataset is 
available in the scikit-learn library. Check the accuracyof model with precision and recall
from sklearn import datasets 

#Load dataset 
cancer = datasets.load_breast_cancer() 
# print the names of the 13 features 
print("Features: ", cancer.feature_names) 
# print the label type of cancer('malignant' 'benign') 
print("Labels: ", cancer.target_names) 
# print data(feature)shape 
cancer.data.shape 
# print the cancer data features (top 5 records) 
print(cancer.data[0:5]) 
# print the cancer labels (0:malignant, 1:benign) 
print(cancer.target) 
# Import train_test_split function 
from sklearn.model_selection import train_test_split 
# Split dataset into training set and test set 
X_train, X_test, y_train, y_test = train_test_split(cancer.data, cancer.target, 
test_size=0.3,random_state=109) # 70% training and 30% test 
#Import svm model 
from sklearn import svm 
#Create a svm Classifier 
clf = svm.SVC(kernel='linear') # Linear Kernel 
#Train the model using the training sets 
clf.fit(X_train, y_train) 
#Predict the response for test dataset 
y_pred = clf.predict(X_test) 
#Import scikit-learn metrics module for accuracy calculation 
from sklearn import metrics 
# Model Accuracy: how often is the classifier correct? 
print("Accuracy:",metrics.accuracy_score(y_test, y_pred))
